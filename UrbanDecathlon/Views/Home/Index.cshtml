@model UrbanDecathlon.Models.Template

@{
    ViewBag.Title = "Results Calculator";
}

@*<div>
        <span id="deleteAthlete">Delete</span>
    </div>*@

<div id="eventList" class="col-md-8">
    @foreach (var currentEvent in Model.Events)
    {
        <div class="event-details" data-id="@currentEvent.Id" data-name="@currentEvent.Name">
            <h3>@currentEvent.Name</h3>
            <div class="event-holder col-sm-12">
                @foreach (var position in currentEvent.Positions)
                {
                    var athlete = position.Athlete;

                    <span data-athlete-id="@athlete.Id" data-athlete="@athlete.Name" data-score="@athlete.Score" data-colour-set="@(!string.IsNullOrEmpty(athlete.Colour))" class="athlete-block col-xs-12" style="background-color: @athlete.Colour">@athlete.Name</span>
                }
            </div>
        </div>
    }
</div>

<div id="resultPanel" class="col-md-4 hidden-sm">
    <div class="jumbotron">
        <h1>Results</h1>
        <div id="overallScore" class="row"></div>
    </div>
</div>


@* -- Modals -- *@

<div id="addAthleteModal" class="modal fade">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Add a new athlete</h4>
            </div>
            <div class="modal-body" style="height: 66px">
                <div class="form-group">
                    <div class="col-md-12">
                        <input id="newAthleteName" class="form-control" type="text" maxlength="3" placeholder="Athlete's initials" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="addAthlete">Add athlete</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div id="saveNewTemplateModal" class="modal fade">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Save as new</h4>
            </div>
            <div class="modal-body" style="height: 100px">
                <div class="form-group">
                    <div class="col-md-12" style="margin-bottom: 10px">
                        <input id="newTemplateName" class="form-control" type="text" maxlength="50" placeholder="Name" />
                    </div>
                    <div class="col-md-12">
                        <input id="newTemplatePin" class="form-control" type="text" maxlength="4" placeholder="Pin Number" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveNewTemplate">Save changes</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div id="loadExistingTemplateModal" class="modal fade">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Load existing results</h4>
            </div>
            <div class="modal-body" style="height: 100px">
                <div class="form-group">
                    <div class="col-md-12" style="margin-bottom: 10px">
                        <input id="existingTemplateName" class="form-control" type="text" maxlength="50" placeholder="Name" />
                    </div>
                    <div class="col-md-12">
                        <input id="existingTemplatePin" class="form-control" type="text" maxlength="4" placeholder="Pin Number" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="loadExistingTemplate">Load results</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div id="resultsModal" class="modal fade">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Results</h4>
            </div>
            <div class="modal-body">
                <div id="overallScoreModal" class="row"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<span id="athleteTemplate" data-athlete-id="0" data-athlete="" data-score="0" data-colour-set="false" class="athlete-block col-xs-12 col-sm-1 col-md-1"></span>

@Html.HiddenFor(m => m.Name)
@Html.HiddenFor(m => m.Password)

<script type="text/javascript">
    $(function () {

        if ($('#Name').val() === "Default") {
            $('#saveTemplateLink').hide();
        } else {
            $('#saveTemplateLink').text('Save "' + $('#Name').val() + '"');
        }


        // Display results - for mobile

        $('#displayResults').click(function () {

            $('#overallScoreModal').html($('#overallScore').html());

            $('#resultsModal').modal('show');
        });



        // Load existing template
        $('#loadTemplateLink').click(function () {
            $('#loadExistingTemplateModal').modal('show');
        });

        $('#loadExistingTemplate').click(function () {

            // Add validation...

            window.location.href = '/UrbanDecathlon/Home/Load?name=' + $('#existingTemplateName').val() + '&password=' + $('#existingTemplatePin').val();


        });




        // Add new athlete
        $('#showAddAthleteModal').click(function () {
            $('#addAthleteModal').modal('show');
        });

        $('#addAthlete').click(function () {

            var athleteTemplate = $('#athleteTemplate').clone()//.removeAttr('id');

            athleteTemplate.removeAttr('id');

            var initials = $('#newAthleteName').val();

            athleteTemplate.text(initials).attr('data-athlete', initials).css('background-color', getRandomRolor());

            athleteTemplate.appendTo($('.event-holder'));

            workOutOrder()

            $('#addAthleteModal').modal('hide');
        });


        // Add and remove selected state
        $('body').click(function () {
            if (!$(event.target).closest('#deleteAthlete, .athlete-selected').length) {
                $('.athlete-block').removeClass('athlete-selected');
            };
        });

        $('#eventList').on('click', '.athlete-block', function () {
            $('.athlete-block').removeClass('athlete-selected');

            $(this).addClass('athlete-selected');
        });


        // Delete Athlete
        $('#deleteAthlete').click(function () {

            var selectedAthlete = $('.athlete-selected');

            if (selectedAthlete.length !== 1) return;

            var athleteName = selectedAthlete.data('athlete');

            $('*[data-athlete="' + athleteName + '"]').remove();

            workOutOrder()
        });

        // Save as new template
        $('#saveNewTemplateLink').click(function () {
            $('#saveNewTemplateModal').modal('show');
        });

        $('#saveNewTemplate').click(function () {

            var newName = $('#newTemplateName').val();

            var newPin = $('#newTemplatePin').val();

            // More validation is obvs required here...
            if (!newName || newPin.length !== 4) return;

            saveTemplate(newName, newPin, true);
        });

        // Save template
        $('#saveTemplateLink').click(function (e) {

            e.preventDefault();

            $('#saveSpinner').show();

            saveTemplate($('#Name').val(), $('#Password').val(), false);
        });

        function saveTemplate(name, pin, isNew) {
            var athletes = $('.event-holder').first().find('.athlete-block');

            var templateAthletes = [];

            athletes.each(function () {

                var currentScore = 0;

                var athleteName = $(this).data('athlete');

                $('*[data-athlete="' + athleteName + '"]').each(function () {
                    currentScore += $(this).data().score;
                });

                templateAthletes.push({
                    Id: $(this).data('athlete-id'),
                    Name: athleteName,
                    Score: 0
                });
            });

            var events = [];

            $('.event-details').each(function () {

                var currentEvent = $(this);

                var positions = [];

                $(currentEvent).find('span').each(function (i, athlete) {

                    positions.push({
                        Order: i + 1,
                        Score: 0, // we don't currently use this...
                        Athlete: {
                            Id: $(athlete).data('athlete-id'),
                            Name: $(athlete).text()
                        }
                    });

                });

                events.push({
                    Id: currentEvent.data('id'),
                    Name: currentEvent.data('name'),
                    Positions: positions
                });

            });

            $.ajax({
                method: "POST",
                url: "/UrbanDecathlon/Home/Save",
                data: { Name: name, Password: pin, Events: events, Athletes: templateAthletes, IsNew: isNew },
                success: function (data) {
                    if (isNew) {

                        $('#Name').val(name);

                        $('#Password').val(pin);

                        $('#saveTemplateLink').text('Save "' + name + '"');

                        $('#saveNewTemplateModal').modal('hide');
                    }

                    $('#saveSpinner').hide();
                }
            });
        }

        randomiseColours();

        workOutOrder();

        $('.event-holder').sortable({
            start: function (e, ui) {
                ui.placeholder.height(ui.item.height());
                ui.placeholder.width(ui.item.width());
            },
            stop: function () {
                workOutOrder();
            },
            revert: true
        });

        function workOutOrder() {

            var athletes = $('.event-holder').first().find('.athlete-block');

            var athleteInfo = {};

            $('.event-holder').each(function () {

                var countDown = athletes.length + 1;

                $(this).find('.athlete-block').each(function (x, item) {

                    var block = $(this);

                    block.data().score += countDown;

                    if (athleteInfo[block.text()] == undefined) {
                        athleteInfo[block.text()] = countDown;
                    } else {
                        athleteInfo[block.text()] += countDown;
                    }

                    if (x == 0) {
                        countDown -= 2;
                    } else {
                        countDown -= 1;
                    }

                });
            });

            var sortedAthletes = sortObject(athleteInfo).reverse();

            $('#overallScore').text('');

            $.each(sortedAthletes, function (x, item) {
                var resultContainer = $('<div>').addClass('col-xs-12');

                $('<div>').addClass('overall-position col-xs-2').text(x + 1).appendTo(resultContainer);
                $('<div>').addClass('col-xs-4').text(item.key).appendTo(resultContainer);
                $('<div>').addClass('overall-score col-xs-2').text(item.value).appendTo(resultContainer);

                resultContainer.appendTo($('#overallScore'));
            });
        }

        $('#changeColour').click(function (e) {

            e.preventDefault();

            randomiseColours();
        });

        function randomiseColours() {

            var athletes = $('.event-holder').first().find('.athlete-block');

            athletes.each(function () {

                if ($(this).data('colour-set') != true) {
                    var athleteName = $(this).data('athlete');

                    $('*[data-athlete="' + athleteName + '"]').css('background-color', getRandomRolor());
                }
            });
        }

        function sortObject(obj) {
            var arr = [];
            for (var prop in obj) {
                if (obj.hasOwnProperty(prop)) {
                    arr.push({
                        'key': prop,
                        'value': obj[prop]
                    });
                }
            }
            arr.sort(function (a, b) { return a.value - b.value; });
            return arr; // returns array
        }

        function getRandomRolor() {
            var letters = '0123456789'.split('');
            var color = '#';
            for (var i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 10)];
            }
            return color;
        }
    });
</script>