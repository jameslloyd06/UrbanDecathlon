@model UrbanDecathlon.Models.Template

@{
    ViewBag.Title = "Results Calculator";
}

<div class="jumbotron">
    <h1>Urban Decathlon</h1>    
    <div id="overallScore" class="lead">
    </div>
    <div>
        <span id="showAddAthleteModal">Add new athlete</span>
        <span id="deleteAthlete">Delete</span>
        <span id="renameAthlete">Rename</span>
    </div>
</div>

<div id="eventList">
    @foreach (var currentEvent in Model.Events)
    {
        <div class="event-details" data-id="@currentEvent.Id" data-name="@currentEvent.Name">
            <h3>@currentEvent.Name</h3>
            <div class="event-holder col-sm-12">
                @foreach (var position in currentEvent.Positions)
                {
                    var athlete = position.Athlete;

                    <span data-athlete-id="@athlete.Id" data-athlete="@athlete.Name" data-score="0" data-colour-set="@(!string.IsNullOrEmpty(athlete.Colour))" class="athlete-block col-xs-12 col-sm-1 col-md-1" style="background-color: @athlete.Colour">@athlete.Name</span>                    
                }
            </div>
        </div>        
    }
</div>

<div id="addAthleteModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Add a new athlete</h4>
            </div>
            <div class="modal-body" style="height: 100px">
                <div class="form-group">
                    <label class="col-md-4">Athlete's initials: </label>
                    <input id="newAthleteName" class="form-control col-md-8" type="text" maxlength="3" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="addAthlete">Save changes</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<span id="athleteTemplate" data-athlete-id="0" data-athlete="" data-score="0" data-colour-set="false" class="athlete-block col-xs-12 col-sm-1 col-md-1"></span>   

<script type="text/javascript">
    $(function () {

        // Add new athlete
        $('#showAddAthleteModal').click(function () {
            $('#addAthleteModal').modal('show');
        });

        $('#addAthlete').click(function () {            

            var athleteTemplate = $('#athleteTemplate').clone()//.removeAttr('id');

            athleteTemplate.removeAttr('id');

            var initials = $('#newAthleteName').val();

            athleteTemplate.text(initials).attr('data-athlete', initials).css('background-color', getRandomRolor());

            athleteTemplate.appendTo($('.event-holder'));

            $('#addAthleteModal').modal('hide');

        });


        // Add and remove selected state
        $('body').click(function () {
            if (!$(event.target).closest('#deleteAthlete, .athlete-selected').length) {
                $('.athlete-block').removeClass('athlete-selected');
            };            
        });
        
        $('#eventList').on('click', '.athlete-block', function () {
            $('.athlete-block').removeClass('athlete-selected');

            $(this).addClass('athlete-selected');
        });


        // Delete Athlete
        $('#deleteAthlete').click(function () {

            var selectedAthlete = $('.athlete-selected');

            if (selectedAthlete.length !== 1) return;

            var athleteName = selectedAthlete.data('athlete');

            $('*[data-athlete="' + athleteName + '"]').remove();
        });

        // Save template
        $('#saveTemplate').click(function (e) {

            e.preventDefault();

            var athletes = $('.event-holder').first().find('.athlete-block');

            var templateAthletes = [];

            athletes.each(function () {

                var currentScore = 0;

                var athleteName = $(this).data('athlete');

                $('*[data-athlete="' + athleteName + '"]').each(function () {
                    currentScore += $(this).data().score;
                });

                templateAthletes.push({
                    Id: $(this).data('athlete-id'),
                    Name: athleteName,
                    Score: currentScore
                });                
            });

            var events = [];

            $('.event-details').each(function () {

                var currentEvent = $(this);

                var positions = [];

                $(currentEvent).find('span').each(function (i, athlete) {

                    positions.push({                        
                        Order: i + 1,
                        Score: 0, // we don't currently use this...
                        Athlete: {
                            Id: $(athlete).data('athlete-id'),
                            Name: $(athlete).text()
                        }                        
                    });

                });

                events.push({
                    Id: currentEvent.data('id'),
                    Name: currentEvent.data('name'),
                    Positions: positions
                });

            });

            $.ajax({
                method: "POST",
                url: "Home/Save",
                data: { Id: "1", Name: "Default", Password: "LeaveMe", Events: events, Athletes: templateAthletes }
            })

        });        

        randomiseColours();

        workOutOrder();

        $('.event-holder').sortable({
            start: function (e, ui) {
                ui.placeholder.height(ui.item.height());
                ui.placeholder.width(ui.item.width());
            },
            stop: function () {
                workOutOrder();
            },
            revert: true
        });

        function workOutOrder() {

            var athletes = $('.event-holder').first().find('.athlete-block');

            var athleteInfo = {};

            $('.event-holder').each(function () {

                var countDown = athletes.length + 1;

                $(this).find('.athlete-block').each(function (x, item) {

                    var block = $(this);

                    block.data().score += countDown;                    

                    if (athleteInfo[block.text()] == undefined) {
                        athleteInfo[block.text()] = countDown;
                    } else {
                        athleteInfo[block.text()] += countDown;
                    }

                    if (x == 0) {
                        countDown -= 2;
                    } else {
                        countDown -= 1;
                    }

                });
            });

            var sortedAthletes = sortObject(athleteInfo).reverse();

            $('#overallScore').text('');

            $.each(sortedAthletes, function (x, item) {
                $('<span>').text(item.key + ': ' + item.value).appendTo($('#overallScore'));
            });
        }

        $('#changeColour').click(function () {
            randomiseColours();
        });

        function randomiseColours() {

            var athletes = $('.event-holder').first().find('.athlete-block');

            athletes.each(function () {

                if ($(this).data('colour-set') != true)
                {
                    var athleteName = $(this).data('athlete');

                    $('*[data-athlete="' + athleteName + '"]').css('background-color', getRandomRolor());
                }                
            });
        }

        function sortObject(obj) {
            var arr = [];
            for (var prop in obj) {
                if (obj.hasOwnProperty(prop)) {
                    arr.push({
                        'key': prop,
                        'value': obj[prop]
                    });
                }
            }
            arr.sort(function (a, b) { return a.value - b.value; });
            return arr; // returns array
        }

        function getRandomRolor() {
            var letters = '0123456789'.split('');
            var color = '#';
            for (var i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 10)];
            }
            return color;
        }
    });
</script>